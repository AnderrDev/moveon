---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "MOVEON - Tu tienda de suplementos deportivos de confianza" } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    
    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
    <!-- Custom Akira Expanded font -->
    <style>
      @font-face {
        font-family: 'Akira Expanded';
        src: url('data:font/woff2;base64,') format('woff2');
        font-weight: 900;
        font-style: normal;
        font-display: swap;
      }
      
      /* Fallback for Akira Expanded */
      .font-heading {
        font-family: 'Impact', 'Arial Black', 'Montserrat', sans-serif;
        font-weight: 900;
        letter-spacing: 0.05em;
        text-transform: uppercase;
      }
    </style>
    
    <title>{title}</title>
  </head>
  <body class="bg-white text-secondary overflow-x-hidden transition-colors duration-300">
    <slot />
    
    <!-- BotÃ³n flotante de WhatsApp -->
    <a
      href="https://wa.me/573012244006?text=Hola%20quiero%20comprar%20...."
      target="_blank"
      rel="noopener noreferrer"
      class="whatsapp-float"
      aria-label="Chatea por WhatsApp"
    >
      <svg class="whatsapp-icon" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
      </svg>
    </a>
    
    <script>
      // Smooth scroll behavior
      document.documentElement.style.scrollBehavior = 'smooth';
      
      // Intersection Observer for animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
            
            // Trigger counter animations
            if (entry.target.classList.contains('counter-trigger')) {
              animateCounters(entry.target);
            }
          }
        });
      }, observerOptions);
      
      // Counter animation function
      function animateCounters(container: any) {
        const counters = container.querySelectorAll('.counter');
        counters.forEach((counter: any) => {
          const target = parseInt(counter.getAttribute('data-target'));
          const duration = 2000;
          const increment = target / (duration / 16);
          let current = 0;
          
          const updateCounter = () => {
            current += increment;
            if (current < target) {
              counter.textContent = Math.floor(current);
              requestAnimationFrame(updateCounter);
            } else {
              counter.textContent = target;
            }
          };
          
          updateCounter();
        });
      }
      
      // Observe all elements with animation classes
      document.addEventListener('DOMContentLoaded', () => {
        const animatedElements = document.querySelectorAll('.fade-in-on-scroll, .slide-up-on-scroll, .scale-in-on-scroll, .counter-trigger');
        animatedElements.forEach((el) => observer.observe(el));
      });
    </script>
    
    <style>
      /* Base animation styles */
      .fade-in-on-scroll {
        opacity: 0;
        transition: opacity 0.8s ease-out;
      }
      
      .slide-up-on-scroll {
        opacity: 0;
        transform: translateY(50px);
        transition: all 0.8s ease-out;
      }
      
      .scale-in-on-scroll {
        opacity: 0;
        transform: scale(0.95);
        transition: all 0.7s ease-out;
      }
      
      .animate-in.fade-in-on-scroll {
        opacity: 1;
      }
      
      .animate-in.slide-up-on-scroll {
        opacity: 1;
        transform: translateY(0);
      }
      
      .animate-in.scale-in-on-scroll {
        opacity: 1;
        transform: scale(1);
      }
      
      /* Custom scrollbar */
      ::-webkit-scrollbar {
        width: 6px;
      }
      
      ::-webkit-scrollbar-track {
        background: #f1f1f1;
      }
      
      ::-webkit-scrollbar-thumb {
        background: #F9D128;
        border-radius: 3px;
      }
      
      ::-webkit-scrollbar-thumb:hover {
        background: #e6bc1f;
      }
      
      /* Dark mode scrollbar */
      .dark ::-webkit-scrollbar-track {
        background: #374151;
      }
      
      /* Hero text animations */
      .hero-text-delay-1 {
        animation-delay: 0.3s;
      }
      
      .hero-text-delay-2 {
        animation-delay: 0.6s;
      }
      
      .hero-text-delay-3 {
        animation-delay: 0.9s;
      }

      .whatsapp-float {
        position: fixed;
        right: 24px;
        bottom: 24px;
        z-index: 1000;
        background: #25D366;
        border-radius: 50%;
        width: 64px;
        height: 64px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 16px rgba(0,0,0,0.18);
        color: #fff;
        border: 4px solid #fff;
        animation: float 2s infinite ease-in-out;
        transition: transform 0.2s, box-shadow 0.2s, background 0.2s;
      }
      .whatsapp-float:hover {
        transform: scale(1.12) rotate(-6deg);
        box-shadow: 0 8px 24px rgba(37,211,102,0.25);
        background: #1ebe5d;
      }
      .whatsapp-icon {
        width: 38px;
        height: 38px;
        display: block;
        animation: bounce-slow 1.5s infinite;
      }
      @keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
      }
    </style>
  </body>
</html>